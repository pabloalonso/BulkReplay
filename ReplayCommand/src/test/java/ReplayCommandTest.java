import junit.framework.Assert;
import org.apache.commons.io.IOUtils;
import org.bonitasoft.engine.api.ApiAccessType;
import org.bonitasoft.engine.api.CommandAPI;
import org.bonitasoft.engine.api.LoginAPI;
import org.bonitasoft.engine.api.TenantAPIAccessor;
import org.bonitasoft.engine.session.APISession;
import org.bonitasoft.engine.util.APITypeManager;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import java.io.File;
import java.io.FileInputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by pablo on 10/07/2017.
 */
public class ReplayCommandTest {
    private static final String HOST_NAME = "http://localhost:8083";

    private static final String USER_NAME = "install";
    private static final String PASSWORD = "install";
    private static final String BONITA = "bonita";
    private final String COMMAND_PATH = "C:\\Proyectos\\AG2R\\Development\\Git\\BulkReplay\\ReplayCommand\\target\\ReplayCommand-1.0.jar";
    private LoginAPI loginAPI;
    private APISession apiSession;
    private CommandAPI commandAPI;
    private static String COMMAND_NAME = "ReplayCommand";

    private boolean compile = true;
    //private boolean compile = false;


    @AfterTest
    public void tierDown(){
        if(compile)
            return;
        try {
            //undeploy
            commandAPI.unregister(COMMAND_NAME);
            commandAPI.removeDependency(COMMAND_NAME+"JAR");
            loginAPI.logout(apiSession);
        } catch (Exception e) {
            e.printStackTrace();
        }


    }

    @BeforeTest
    public void tierUp() throws Exception {
        if(compile)
            return;
        Map<String, String> settings = new HashMap<String, String>();
        settings.put("server.url", HOST_NAME);
        settings.put("application.name", BONITA);
        APITypeManager.setAPITypeAndParams(ApiAccessType.HTTP, settings);
        try {
            loginAPI = TenantAPIAccessor.getLoginAPI();
            apiSession = loginAPI.login(USER_NAME, PASSWORD);
        } catch (Exception e) {
            e.printStackTrace();
        }

        byte[] byteArray = IOUtils.toByteArray(new FileInputStream(new File(COMMAND_PATH)));

        //deploy

        commandAPI = TenantAPIAccessor.getCommandAPI(apiSession);

        commandAPI.addDependency(COMMAND_NAME+"JAR", byteArray);
        commandAPI.register(COMMAND_NAME, "Scheduler task retry", "com.bonitasoft.bulk.command.ReplayCommand");

        System.out.println("Command published");

    }

    @Test
    public void testFileHandlerChange(){
        if(compile)
            return;
        try {
            Map<String, String> settings = new HashMap<String, String>();
            settings.put("server.url", HOST_NAME);
            settings.put("application.name", "bonita");
            APITypeManager.setAPITypeAndParams(ApiAccessType.HTTP, settings);
            try {
                loginAPI = TenantAPIAccessor.getLoginAPI();
                apiSession = loginAPI.login(USER_NAME, PASSWORD);
            } catch (Exception e) {
                e.printStackTrace();
            }
            final Map<String, Serializable> parameters = new HashMap<String, Serializable>();

            parameters.put("tenantId", 1);
            parameters.put("interval", 2L);
            parameters.put("batchSize", 5L);
            List<Long> ids = getIds();
            System.out.println("Size: " + ids.size());

/*
            ids.add(4539L);
            ids.add(4545L);
            ids.add(4549L);
*/
/*
            ids.add(4550L);
            ids.add(4551L);
            ids.add(6002L);

            ids.add(4511L);
            ids.add(4513L);
            ids.add(4527L);
            */
            parameters.put("ids", (Serializable) ids);


            Assert.assertNotNull(commandAPI.execute(COMMAND_NAME, parameters));
        }catch (Exception e){
            e.printStackTrace();
        }

    }

    public List<Long> getIds() {
        List<Long> ids = new ArrayList<Long>();
        ids.add(4511L);
        ids.add(4513L);
        ids.add(4527L);
        ids.add(4528L);
        ids.add(4538L);
        ids.add(4539L);
        ids.add(4545L);
        ids.add(4549L);
        ids.add(4550L);
        ids.add(4551L);
        ids.add(4555L);
        ids.add(4558L);
        ids.add(4559L);
        ids.add(4560L);
        ids.add(4561L);
        ids.add(4564L);
        ids.add(4573L);
        ids.add(4575L);
        ids.add(4583L);
        ids.add(4589L);
        ids.add(4590L);
        ids.add(4596L);
        ids.add(4597L);
        ids.add(4600L);
        ids.add(4601L);
        ids.add(4607L);
        ids.add(4608L);
        ids.add(4610L);
        ids.add(4612L);
        ids.add(4613L);
        ids.add(4618L);
        ids.add(4619L);
        ids.add(4620L);
        ids.add(4625L);
        ids.add(4627L);
        ids.add(4633L);
        ids.add(4637L);
        ids.add(4638L);
        ids.add(4639L);
        ids.add(4640L);
        ids.add(4641L);
        ids.add(4642L);
        ids.add(4644L);
        ids.add(4645L);
        ids.add(4647L);
        ids.add(4648L);
        ids.add(4651L);
        ids.add(4665L);
        ids.add(4681L);
        ids.add(4682L);
        ids.add(4685L);
        ids.add(4691L);
        ids.add(4692L);
        ids.add(4693L);
        ids.add(4701L);
        ids.add(4702L);
        ids.add(4704L);
        ids.add(4708L);
        ids.add(4709L);
        ids.add(4710L);
        ids.add(4711L);
        ids.add(4712L);
        ids.add(4713L);
        ids.add(4715L);
        ids.add(4717L);
        ids.add(4719L);
        ids.add(4720L);
        ids.add(4722L);
        ids.add(4724L);
        ids.add(4726L);
        ids.add(4727L);
        ids.add(4728L);
        ids.add(4730L);
        ids.add(4731L);
        ids.add(4733L);
        ids.add(4735L);
        ids.add(4742L);
        ids.add(4743L);
        ids.add(4747L);
        ids.add(4748L);
        ids.add(4753L);
        ids.add(4754L);
        ids.add(4759L);
        ids.add(4761L);
        ids.add(4762L);
        ids.add(4764L);
        ids.add(4766L);
        ids.add(4771L);
        ids.add(4776L);
        ids.add(4779L);
        ids.add(4783L);
        ids.add(4784L);
        ids.add(4785L);
        ids.add(4788L);
        ids.add(4792L);
        ids.add(4797L);
        ids.add(4800L);
        ids.add(4801L);
        ids.add(4804L);
        ids.add(4805L);
        ids.add(4806L);
        ids.add(4814L);
        ids.add(4818L);
        ids.add(4820L);
        ids.add(4823L);
        ids.add(4827L);
        ids.add(4830L);
        ids.add(4831L);
        ids.add(4833L);
        ids.add(4838L);
        ids.add(4842L);
        ids.add(4844L);
        ids.add(4845L);
        ids.add(4849L);
        ids.add(4850L);
        ids.add(4852L);
        ids.add(4861L);
        ids.add(4864L);
        ids.add(4871L);
        ids.add(4872L);
        ids.add(4874L);
        ids.add(4877L);
        ids.add(4882L);
        ids.add(4883L);
        ids.add(4886L);
        ids.add(4887L);
        ids.add(4888L);
        ids.add(4895L);
        ids.add(4897L);
        ids.add(4898L);
        ids.add(4901L);
        ids.add(4904L);
        ids.add(4907L);
        ids.add(4909L);
        ids.add(4915L);
        ids.add(4917L);
        ids.add(4922L);
        ids.add(4923L);
        ids.add(4924L);
        ids.add(4929L);
        ids.add(4930L);
        ids.add(4933L);
        ids.add(4936L);
        ids.add(4938L);
        ids.add(4941L);
        ids.add(4944L);
        ids.add(4949L);
        ids.add(4950L);
        ids.add(4954L);
        ids.add(4960L);
        ids.add(4961L);
        ids.add(4963L);
        ids.add(4967L);
        ids.add(4969L);
        ids.add(4975L);
        ids.add(4980L);
        ids.add(4981L);
        ids.add(4983L);
        ids.add(4984L);
        ids.add(4988L);
        ids.add(4990L);
        ids.add(5000L);
        ids.add(5001L);
        ids.add(5002L);
        ids.add(5005L);
        ids.add(5008L);
        ids.add(5010L);
        ids.add(5013L);
        ids.add(5015L);
        ids.add(5016L);
        ids.add(5017L);
        ids.add(5023L);
        ids.add(5029L);
        ids.add(5030L);
        ids.add(5031L);
        ids.add(5036L);
        ids.add(5041L);
        ids.add(5043L);
        ids.add(5045L);
        ids.add(5047L);
        ids.add(5049L);
        ids.add(5071L);
        ids.add(5072L);
        ids.add(5073L);
        ids.add(5074L);
        ids.add(5075L);
        ids.add(5080L);
        ids.add(5083L);
        ids.add(5088L);
        ids.add(5092L);
        ids.add(5093L);
        ids.add(5095L);
        ids.add(5097L);
        ids.add(5100L);
        ids.add(5104L);
        ids.add(5106L);
        ids.add(5107L);
        ids.add(5108L);
        ids.add(5112L);
        ids.add(5114L);
        ids.add(5116L);
        ids.add(5117L);
        ids.add(5119L);
        ids.add(5121L);
        ids.add(5124L);
        ids.add(5125L);
        ids.add(5131L);
        ids.add(5132L);
        ids.add(5136L);
        ids.add(5140L);
        ids.add(5144L);
        ids.add(5146L);
        ids.add(5149L);
        ids.add(5150L);
        ids.add(5154L);
        ids.add(5155L);
        ids.add(5159L);
        ids.add(5162L);
        ids.add(5166L);
        ids.add(5170L);
        ids.add(5171L);
        ids.add(5173L);
        ids.add(5180L);
        ids.add(5183L);
        ids.add(5185L);
        ids.add(5191L);
        ids.add(5192L);
        ids.add(5196L);
        ids.add(5197L);
        ids.add(5198L);
        ids.add(5201L);
        ids.add(5204L);
        ids.add(5207L);
        ids.add(5212L);
        ids.add(5215L);
        ids.add(5216L);
        ids.add(5218L);
        ids.add(5222L);
        ids.add(5225L);
        ids.add(5226L);
        ids.add(5232L);
        ids.add(5234L);
        ids.add(5237L);
        ids.add(5239L);
        ids.add(5244L);
        ids.add(5250L);
        ids.add(5257L);
        ids.add(5259L);
        ids.add(5260L);
        ids.add(5261L);
        ids.add(5263L);
        ids.add(5266L);
        ids.add(5268L);
        ids.add(5269L);
        ids.add(5271L);
        ids.add(5274L);
        ids.add(5279L);
        ids.add(5280L);
        ids.add(5286L);
        ids.add(5288L);
        ids.add(5289L);
        ids.add(5295L);
        ids.add(5296L);
        ids.add(5299L);
        ids.add(5303L);
        ids.add(5307L);
        ids.add(5311L);
        ids.add(5312L);
        ids.add(5316L);
        ids.add(5317L);
        ids.add(5318L);
        ids.add(5324L);
        ids.add(5327L);
        ids.add(5330L);
        ids.add(5332L);
        ids.add(5333L);
        ids.add(5338L);
        ids.add(5340L);
        ids.add(5352L);
        ids.add(5355L);
        ids.add(5358L);
        ids.add(5359L);
        ids.add(5360L);
        ids.add(5365L);
        ids.add(5367L);
        ids.add(5369L);
        ids.add(5372L);
        ids.add(5373L);
        ids.add(5374L);
        ids.add(5378L);
        ids.add(5390L);
        ids.add(5392L);
        ids.add(5394L);
        ids.add(5395L);
        ids.add(5396L);
        ids.add(5398L);
        ids.add(5405L);
        ids.add(5410L);
        ids.add(5411L);
        ids.add(5413L);
        ids.add(5415L);
        ids.add(5416L);
        ids.add(5417L);
        ids.add(5419L);
        ids.add(5422L);
        ids.add(5424L);
        ids.add(5434L);
        ids.add(5436L);
        ids.add(5440L);
        ids.add(5443L);
        ids.add(5444L);
        ids.add(5449L);
        ids.add(5451L);
        ids.add(5452L);
        ids.add(5457L);
        ids.add(5458L);
        ids.add(5461L);
        ids.add(5468L);
        ids.add(5473L);
        ids.add(5475L);
        ids.add(5480L);
        ids.add(5481L);
        ids.add(5482L);
        ids.add(5486L);
        ids.add(5487L);
        ids.add(5493L);
        ids.add(5496L);
        ids.add(5497L);
        ids.add(5502L);
        ids.add(5503L);
        ids.add(5507L);
        ids.add(5508L);
        ids.add(5512L);
        ids.add(5514L);
        ids.add(5517L);
        ids.add(5519L);
        ids.add(5521L);
        ids.add(5522L);
        ids.add(5524L);
        ids.add(5526L);
        ids.add(5527L);
        ids.add(5530L);
        ids.add(5534L);
        ids.add(5544L);
        ids.add(5552L);
        ids.add(5553L);
        ids.add(5554L);
        ids.add(5558L);
        ids.add(5561L);
        ids.add(5564L);
        ids.add(5567L);
        ids.add(5568L);
        ids.add(5569L);
        ids.add(5571L);
        ids.add(5572L);
        ids.add(5575L);
        ids.add(5577L);
        ids.add(5583L);
        ids.add(5586L);
        ids.add(5589L);
        ids.add(5592L);
        ids.add(5595L);
        ids.add(5599L);
        ids.add(5603L);
        ids.add(5605L);
        ids.add(5608L);
        ids.add(5610L);
        ids.add(5612L);
        ids.add(5616L);
        ids.add(5617L);
        ids.add(5619L);
        ids.add(5627L);
        ids.add(5630L);
        ids.add(5632L);
        ids.add(5633L);
        ids.add(5637L);
        ids.add(5643L);
        ids.add(5644L);
        ids.add(5646L);
        ids.add(5649L);
        ids.add(5651L);
        ids.add(5654L);
        ids.add(5655L);
        ids.add(5659L);
        ids.add(5667L);
        ids.add(5669L);
        ids.add(5672L);
        ids.add(5674L);
        ids.add(5676L);
        ids.add(5677L);
        ids.add(5681L);
        ids.add(5683L);
        ids.add(5684L);
        ids.add(5690L);
        ids.add(5694L);
        ids.add(5696L);
        ids.add(5697L);
        ids.add(5701L);
        ids.add(5707L);
        ids.add(5708L);
        ids.add(5715L);
        ids.add(5719L);
        ids.add(5720L);
        ids.add(5721L);
        ids.add(5723L);
        ids.add(5728L);
        ids.add(5729L);
        ids.add(5733L);
        ids.add(5734L);
        ids.add(5736L);
        ids.add(5743L);
        ids.add(5745L);
        ids.add(5748L);
        ids.add(5752L);
        ids.add(5754L);
        ids.add(5758L);
        ids.add(5760L);
        ids.add(5761L);
        ids.add(5766L);
        ids.add(5769L);
        ids.add(5770L);
        ids.add(5773L);
        ids.add(5778L);
        ids.add(5779L);
        ids.add(5784L);
        ids.add(5786L);
        ids.add(5788L);
        ids.add(5796L);
        ids.add(5798L);
        ids.add(5802L);
        ids.add(5804L);
        ids.add(5805L);
        ids.add(5807L);
        ids.add(5808L);
        ids.add(5815L);
        ids.add(5816L);
        ids.add(5817L);
        ids.add(5818L);
        ids.add(5826L);
        ids.add(5831L);
        ids.add(5834L);
        ids.add(5835L);
        ids.add(5838L);
        ids.add(5840L);
        ids.add(5844L);
        ids.add(5848L);
        ids.add(5851L);
        ids.add(5852L);
        ids.add(5854L);
        ids.add(5856L);
        ids.add(5859L);
        ids.add(5863L);
        ids.add(5867L);
        ids.add(5871L);
        ids.add(5874L);
        ids.add(5876L);
        ids.add(5880L);
        ids.add(5883L);
        ids.add(5886L);
        ids.add(5889L);
        ids.add(5891L);
        ids.add(5892L);
        ids.add(5895L);
        ids.add(5899L);
        ids.add(5902L);
        ids.add(5907L);
        ids.add(5914L);
        ids.add(5919L);
        ids.add(5920L);
        ids.add(5923L);
        ids.add(5925L);
        ids.add(5926L);
        ids.add(5929L);
        ids.add(5931L);
        ids.add(5934L);
        ids.add(5936L);
        ids.add(5939L);
        ids.add(5941L);
        ids.add(5942L);
        ids.add(5947L);
        ids.add(5950L);
        ids.add(5956L);
        ids.add(5957L);
        ids.add(5958L);
        ids.add(5962L);
        ids.add(5966L);
        ids.add(5968L);
        ids.add(5970L);
        ids.add(5974L);
        ids.add(5978L);
        ids.add(5980L);
        ids.add(5982L);
        ids.add(5985L);
        ids.add(5991L);
        ids.add(5993L);
        ids.add(5994L);
        ids.add(5997L);
        ids.add(5999L);
        ids.add(6000L);
        ids.add(6002L);
        return ids;

    }
}
